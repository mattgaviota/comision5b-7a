# -*- coding: utf-8 -*-
"""TP 8°.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qzfAMJ_y6Vq3fDPPCLikJ3yP_GFtDyrs

### Ejercicio 1:

Crear las siguientes funciones (el archivo estará en tu google drive):

● Crear archivo de texto

● Abrir y mostrar contenido de archivo de texto

● Guardar datos en archivo de texto.
"""

from google.colab import drive
drive.mount('/content/drive')

import os

def crear_archivo(ruta):
  archivo = open(ruta, 'w')
  archivo.close()
  
def mostrar_archivo(ruta): 
  with open(ruta, 'r') as archivo:
    for linea in archivo:
      print(linea)

def editar_archivo(ruta, mensaje):
  archivo = open(ruta, 'w')
  archivo.write(mensaje)

ruta = '/content/drive/MyDrive/ejemplo_texto.txt'
# crear_archivo(ruta)
# mostrar_archivo(ruta)
# editar_archivo(ruta, "mensaje editado")
mostrar_archivo(ruta)

"""### Ejercicio 2: 

Crear un programa que lea una lista de personas, cuyos datos son
DNI, Apellido y Nombre contenidos en un archivo csv, luego listelos en orden
alfabético y muestre el resultado del ordenamiento.
"""

import csv
import operator

ruta ='/content/drive/MyDrive/ejemplos_personas.csv'
with open(ruta, 'r', newline='') as archivo:
  reader = csv.reader(archivo, delimiter=",")
  lista_ordenada = sorted(reader, key=operator.itemgetter(1), reverse=False)
  #for filas in sorted:
  print(lista_ordenada)

"""### Ejercicio 3: 

Escribir un programa que acceda a un archivo de texto de google
drive y muestre por pantalla el número de palabras que contiene.
"""

import os

def contar_palabras(ruta):
  cont = 0
  with open(ruta, newline='') as archivo:
    for linea in archivo:
      palabras = linea.split(' ')
      #print(palabras)
      cont += len(palabras)
    print(f"La cantidad de palabras es: {cont}")

contar_palabras('/content/drive/MyDrive/lore.txt')

"""### Ejercicio 4:

Escribir un programa que lea los datos de un fichero de texto, y
transforme cada fila en un diccionario usando sus campos. Al contenido del
diccionario añadirlo a una lista llamada personas. Luego hacer una función que
muestre el contenido.

El fichero de texto se denominará personas.csv y tendrá el siguiente contenido
en texto plano (créalo previamente):

1,Carlos,Pérez,05/01/1989

2,Manuel,Heredia,26/12/1973

3,Rosa,Campos,12/06/1961

4,David;García,25/07/2006

Los campos del diccionario seguirán el orden: id, nombre, apellido y nacimiento.
"""

def crear_listado_diccionarios(ruta):
  lista = []
  with open(ruta, newline="") as archivo:
    reader= csv.reader(archivo)
    for linea in reader:
      diccionario = dict([('id', linea[0]),('nombre', linea[1]), ('apellido', linea[2]), ('fecha_nac', linea[3])])
      lista.append(diccionario)
    return lista
def mostrar_lista(lista):
  for elemento in lista:
    print('Nombre y apellido: {}{} \t Fecha de Nacimiento: {}'.format(elemento['nombre'], elemento['apellido'], elemento['fecha_nac']))

ruta = '/content/drive/MyDrive/personas.csv'
lista_dic = crear_listado_diccionarios(ruta)
#print(lista_dic)
mostrar_lista(lista_dic)

"""### Ejercicio 5: 

A partir del contenido de una página generar un archivo que guarde
la información extraída. La página contiene una lista de los 40 temas
principales de música.

Link: https://los40.com/los40/2021/02/18/musica/1613476104_405901.html
"""

import requests
from bs4 import BeautifulSoup
import os
def crear_archivo_musica(ruta,url):
  archivo = open(ruta, 'w')
  r = requests.get(url)
  soup = BeautifulSoup(r.text, 'lxml')
  count = 0
  for titulos in soup.find_all('h2'):
    if count != 0:
      archivo.write(str(count)+ ':' + titulos.text + os.linesep)
    count += 1
  archivo.close()


ruta = '/content/drive/MyDrive/lista_musica_TP8_2.txt'
url = 'https://los40.com/los40/2021/02/18/musica/1613476104_405901.html'

crear_archivo_musica(ruta, url)

"""### Ejercicio 6:

A partir de varios objetos de tipo diccionario genere un archivo
JSON. En los objetos de tipo diccionario, deberá agregar los datos de tres
clientes entre los que se encuentra el nombre, apellido, la edad y la cantidad
gastada por cada uno.

"""

import json

datos = {}
datos['clientes'] = []
datos['clientes'].append(
    {
        'nombre': 'Patricio',
        'apellido': 'Hernandez',
        'edad': 19,
        'monto': 1000.9
    }
)
datos['clientes'].append(
    {
        'nombre': 'Ronaldo',
        'apellido': 'Tejerina',
        'edad': 25,
        'monto': 20000
    }
)
datos['clientes'].append(
    {
        'nombre': 'Agustin',
        'apellido': 'Lopez',
        'edad': 40,
        'monto': 100.6 
    }
)
with open('/content/drive/MyDrive/Datos_clientes.json', 'w') as archivo:
  json.dump(datos, archivo, indent=4)

"""### Ejercicio 7: 

Crear una función que convierta una cadena de texto JSON en un
diccionario. Usaremos la página http://ip-api.com que devuelve datos de una IP
pública en formato json. La ip que consultaremos será una de la UNSa.

IP 170.210.200.2 y url http://ip-api.com/json/170.210.200.2
"""

import requests
import json
resp = requests.get('http://ip-api.com/json/170.210.200.2')
diccionario = json.loads(resp.content)

print(diccionario)
print(diccionario['country'])
print(diccionario['city'])

"""### Ejercicio 8:

Con el archivo Entidades.json que contiene un conjunto de clases y
sus propiedades realizar una función que lea el archivo decodificandolo.

Ayuda:

● Primero debemos abrir el archivo json, indicando donde se encuentra a la
función open(), en forma de solo lectura.
● Luego debemos leer el contenido con la función read(), y lo guardaremos
en una variable contenido.

● Por último es necesario descodificar el JSON para que podamos
utilizarlo posteriormente dentro de nuestra aplicación. Por lo que
llamamos al paquete JSON para ejecutar la función loads() sobre el
contenido leído previamente. De esa forma tendremos el contenido de
JSON en memoria y podremos trabajar con él.
"""

import json

archivo8 = open('/content/drive/MyDrive/entidades.json')
contenido = archivo8.read()
json_decodificado = json.loads(contenido)

for entidad in json_decodificado['Classes']:
  print('Entidad ' + entidad['Name'] + '. Sus propiedades son: ')
  for propiedad in entidad['Properties']:
    print('Propiedad ' + propiedad['Name'] + ' de tipo '+ propiedad['Type'])
  print(' ')